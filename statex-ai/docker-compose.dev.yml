services:
  # AI Orchestrator - Central coordination
  ai-orchestrator:
    image: python:3.11-slim
    container_name: statex_ai_orchestrator_dev
    volumes:
      - ./services/ai-orchestrator:/app
      - ~/.cache/pip:/root/.cache/pip
    working_dir: /app
    command: sh -c "apt-get update && apt-get install -y curl && pip install -r requirements.txt && uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
    ports:
      - "8010:8000"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@host.docker.internal:5432/statex
      - REDIS_URL=redis://host.docker.internal:6379
      - RABBITMQ_URL=amqp://statex:statex_password@host.docker.internal:5672
      - NLP_SERVICE_URL=http://nlp-service:8011
      - ASR_SERVICE_URL=http://asr-service:8012
      - DOCUMENT_AI_URL=http://document-ai:8013
      - PROTOTYPE_GENERATOR_URL=http://prototype-generator:8014
      - TEMPLATE_REPOSITORY_URL=http://template-repository:8015
      - FREE_AI_SERVICE_URL=http://free-ai-service:8016
      - AI_WORKERS_URL=http://ai-workers:8017
      - NOTIFICATION_SERVICE_URL=http://notification-service:8005
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

  # NLP Service - Text analysis and generation
  nlp-service:
    image: python:3.11-slim
    container_name: statex_nlp_dev
    volumes:
      - ./services/nlp-service:/app
      - ~/.cache/pip:/root/.cache/pip
    working_dir: /app
    command: sh -c "apt-get update && apt-get install -y curl && pip install -r requirements.txt && uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
    ports:
      - "8011:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DATABASE_URL=postgresql://statex:statex_password@host.docker.internal:5432/statex
      - REDIS_URL=redis://host.docker.internal:6379
      - AI_ORCHESTRATOR_URL=${AI_ORCHESTRATOR_URL:-http://ai-orchestrator:8000}
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

  # ASR Service - Speech-to-text conversion
  asr-service:
    image: python:3.11-slim
    container_name: statex_asr_dev
    volumes:
      - ./services/asr-service:/app
      - ~/.cache/pip:/root/.cache/pip
    working_dir: /app
    command: sh -c "apt-get update && apt-get install -y curl && pip install -r requirements.txt && uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
    ports:
      - "8012:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=postgresql://statex:statex_password@host.docker.internal:5432/statex
      - REDIS_URL=redis://host.docker.internal:6379
      - AI_ORCHESTRATOR_URL=${AI_ORCHESTRATOR_URL:-http://ai-orchestrator:8000}
      - S3_ENDPOINT=http://host.docker.internal:9000
      - S3_ACCESS_KEY=statex
      - S3_SECRET_KEY=statex_password
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Document AI Service - File analysis and processing
  document-ai:
    image: python:3.11-slim
    container_name: statex_document_ai_dev
    volumes:
      - ./services/document-ai:/app
      - ~/.cache/pip:/root/.cache/pip
    working_dir: /app
    command: sh -c "apt-get update && apt-get install -y curl && pip install -r requirements.txt && uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
    ports:
      - "8013:8000"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@host.docker.internal:5432/statex
      - REDIS_URL=redis://host.docker.internal:6379
      - AI_ORCHESTRATOR_URL=${AI_ORCHESTRATOR_URL:-http://ai-orchestrator:8000}
      - S3_ENDPOINT=http://host.docker.internal:9000
      - S3_ACCESS_KEY=statex
      - S3_SECRET_KEY=statex_password
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Prototype Generator Service
  prototype-generator:
    image: python:3.11-slim
    container_name: statex_prototype_generator_dev
    volumes:
      - ./services/prototype-generator:/app
      - ~/.cache/pip:/root/.cache/pip
    working_dir: /app
    command: sh -c "apt-get update && apt-get install -y curl && pip install -r requirements.txt && uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
    ports:
      - "8014:8000"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@host.docker.internal:5432/statex
      - REDIS_URL=redis://host.docker.internal:6379
      - AI_ORCHESTRATOR_URL=${AI_ORCHESTRATOR_URL:-http://ai-orchestrator:8000}
      - TEMPLATE_REPOSITORY_URL=http://host.docker.internal:8015
      - DEPLOYMENT_URL=${DEPLOYMENT_URL:-http://localhost:3000}
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Template Repository Service
  template-repository:
    image: python:3.11-slim
    container_name: statex_template_repo_dev
    volumes:
      - ./services/template-repository:/app
      - ~/.cache/pip:/root/.cache/pip
    working_dir: /app
    command: sh -c "apt-get update && apt-get install -y curl && pip install -r requirements.txt && uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
    ports:
      - "8015:8000"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@host.docker.internal:5432/statex
      - REDIS_URL=redis://host.docker.internal:6379
      - AI_ORCHESTRATOR_URL=${AI_ORCHESTRATOR_URL:-http://ai-orchestrator:8000}
      - GIT_REPO_URL=${TEMPLATE_GIT_REPO}
      - S3_ENDPOINT=http://host.docker.internal:9000
      - S3_ACCESS_KEY=statex
      - S3_SECRET_KEY=statex_password
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Free AI Service - Free AI models (Ollama, Hugging Face)
  free-ai-service:
    image: python:3.11-slim
    container_name: statex_free_ai_dev
    volumes:
      - ./services/free-ai-service:/app
      - ~/.cache/pip:/root/.cache/pip
    working_dir: /app
    command: sh -c "apt-get update && apt-get install -y curl && pip install -r requirements.txt && uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
    ports:
      - "8016:8000"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@host.docker.internal:5432/statex
      - REDIS_URL=redis://host.docker.internal:6379
      - AI_ORCHESTRATOR_URL=${AI_ORCHESTRATOR_URL:-http://ai-orchestrator:8000}
      - OLLAMA_URL=http://host.docker.internal:11434
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

  # AI Workers - AI processing agents
  ai-workers:
    image: python:3.11-slim
    container_name: statex_ai_workers_dev
    volumes:
      - ./services/ai-workers:/app
      - ~/.cache/pip:/root/.cache/pip
    working_dir: /app
    command: sh -c "apt-get update && apt-get install -y curl && pip install -r requirements.txt && uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
    ports:
      - "8017:8000"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@host.docker.internal:5432/statex
      - REDIS_URL=redis://host.docker.internal:6379
      - RABBITMQ_URL=amqp://statex:statex_password@host.docker.internal:5672
      - AI_ORCHESTRATOR_URL=${AI_ORCHESTRATOR_URL:-http://ai-orchestrator:8000}
      - S3_ENDPOINT=http://host.docker.internal:9000
      - S3_ACCESS_KEY=statex
      - S3_SECRET_KEY=statex_password
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  statex_network:
    external: true

