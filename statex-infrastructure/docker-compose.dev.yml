services:
  # PostgreSQL Database
  postgres:
    image: postgres:18-alpine
    container_name: ${POSTGRES_CONTAINER_NAME:-statex_postgres_dev}
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-statex_submissions}
      - POSTGRES_USER=${POSTGRES_USER:-statex}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-statex_password}
    ports:
      - "${POSTGRES_EXTERNAL_PORT:-5432}:${POSTGRES_INTERNAL_PORT:-5432}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - statex_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U statex -d statex_submissions"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ${REDIS_CONTAINER_NAME:-statex_redis_dev}
    restart: unless-stopped
    ports:
      - "${REDIS_EXTERNAL_PORT:-6379}:${REDIS_INTERNAL_PORT:-6379}"
    volumes:
      - redis_data:/data
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ${RABBITMQ_CONTAINER_NAME:-statex_rabbitmq_dev}
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=statex
      - RABBITMQ_DEFAULT_PASS=statex_password
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "${RABBITMQ_EXTERNAL_PORT:-5672}:${RABBITMQ_INTERNAL_PORT:-5672}"   # AMQP port
      - "${RABBITMQ_MANAGEMENT_EXTERNAL_PORT:-15672}:${RABBITMQ_MANAGEMENT_INTERNAL_PORT:-15672}" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: ${MINIO_CONTAINER_NAME:-statex_minio_dev}
    restart: unless-stopped
    command: server /data --console-address ":${MINIO_CONSOLE_INTERNAL_PORT:-9001}"
    environment:
      - MINIO_ROOT_USER=statex
      - MINIO_ROOT_PASSWORD=statex_password
      - MINIO_DEFAULT_BUCKETS=statex-uploads,statex-documents,statex-templates
    ports:
      - "${MINIO_EXTERNAL_PORT:-9000}:${MINIO_INTERNAL_PORT:-9000}"   # API port
      - "${MINIO_CONSOLE_EXTERNAL_PORT:-9001}:${MINIO_CONSOLE_INTERNAL_PORT:-9001}"   # Console port
    volumes:
      - minio_data:/data
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: statex_nginx_dev
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-dev.conf:/etc/nginx/nginx.conf:ro
      - ./ssl-dev:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
      - ./webroot:/var/www/html:ro
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST:-localhost}
      - DEFAULT_HOST=${DEFAULT_HOST:-localhost}
      - ALLOW_SELF_SIGNED=true
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Self-Signed Certificate Generator - DISABLED
  # cert-generator:
  #   image: alpine:latest
  #   container_name: statex_cert_generator
  #   volumes:
  #     - ./ssl-dev:/ssl
  #     - ./scripts/generate-self-signed.sh:/generate-certs.sh:ro
  #   command: sh -c "apk add --no-cache openssl && chmod +x /generate-certs.sh && /generate-certs.sh"
  #   networks:
  #     - statex_network

  # Elasticsearch (for advanced search features) - TEMPORARILY DISABLED
  # elasticsearch:
  #   image: elasticsearch:8.11.0
  #   container_name: statex_elasticsearch_dev
  #   restart: unless-stopped
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data
  #   networks:
  #     - statex_network
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  # Ollama Local AI Service - DISABLED
  # ollama:
  #   image: ollama/ollama:latest
  #   container_name: statex_ollama_dev
  #   restart: unless-stopped
  #   ports:
  #     - "11434:11434"
  #   volumes:
  #     - ollama_data:/root/.ollama
  #   networks:
  #     - statex_network
  #   environment:
  #     - OLLAMA_HOST=0.0.0.0
  #     - OLLAMA_ORIGINS=*
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 60s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  minio_data:
    driver: local
  # elasticsearch_data:
  #   driver: local
  # ollama_data:
  #   driver: local

networks:
  statex_network:
    external: true
    name: statex_network