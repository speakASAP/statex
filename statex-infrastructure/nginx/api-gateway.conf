# StateX API Gateway Configuration
# Centralized routing for all microservices

# Upstream definitions for all services
upstream ai_orchestrator {
    server statex_ai_orchestrator_dev:8000;
    keepalive 32;
}

upstream notification_service {
    server ${NOTIFICATION_SERVICE_CONTAINER_NAME:-statex_notification_dev}:${NOTIFICATION_SERVICE_INTERNAL_PORT:-8005};
    keepalive 32;
}

upstream submission_service {
    server statex_submission_dev:8000;
    keepalive 32;
}

upstream user_portal {
    server statex_user_portal_dev:8000;
    keepalive 32;
}

upstream content_service {
    server statex_content_dev:8000;
    keepalive 32;
}

upstream monitoring_service {
    server statex_monitoring_service_dev:8000;
    keepalive 32;
}

upstream logging_service {
    server statex_logging_service_dev:8000;
    keepalive 32;
}

upstream nlp_service {
    server statex_nlp_dev:8000;
    keepalive 32;
}

upstream asr_service {
    server statex_asr_dev:8000;
    keepalive 32;
}

upstream document_ai {
    server statex_document_ai_dev:8000;
    keepalive 32;
}

upstream prototype_generator {
    server statex_prototype_generator_dev:8000;
    keepalive 32;
}

upstream template_repository {
    server statex_template_repo_dev:8000;
    keepalive 32;
}

upstream free_ai_service {
    server statex_free_ai_dev:8000;
    keepalive 32;
}

upstream ai_workers {
    server statex_ai_workers_dev:8000;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=ai:10m rate=5r/s;

# Main API Gateway server
server {
    listen 80;
    server_name _;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Global rate limiting
    limit_req zone=api burst=20 nodelay;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "API Gateway is healthy\n";
        add_header Content-Type text/plain;
    }
    
    # API status endpoint
    location /api/status {
        access_log off;
        return 200 '{"status":"healthy","gateway":"statex-api-gateway","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # AI Services Routes
    location /api/ai/ {
        limit_req zone=ai burst=10 nodelay;
        proxy_pass http://ai_orchestrator/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # AI-specific timeouts (longer for processing)
        proxy_connect_timeout 120s;
        proxy_read_timeout 300s;
        proxy_send_timeout 120s;
    }
    
    # NLP Service
    location /api/nlp/ {
        limit_req zone=ai burst=10 nodelay;
        proxy_pass http://nlp_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 120s;
        proxy_read_timeout 300s;
        proxy_send_timeout 120s;
    }
    
    # ASR Service
    location /api/asr/ {
        limit_req zone=ai burst=10 nodelay;
        proxy_pass http://asr_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 120s;
        proxy_read_timeout 300s;
        proxy_send_timeout 120s;
    }
    
    # Document AI Service
    location /api/document/ {
        limit_req zone=ai burst=10 nodelay;
        proxy_pass http://document_ai/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 120s;
        proxy_read_timeout 300s;
        proxy_send_timeout 120s;
    }
    
    # Prototype Generator
    location /api/prototype/ {
        limit_req zone=ai burst=10 nodelay;
        proxy_pass http://prototype_generator/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 120s;
        proxy_read_timeout 300s;
        proxy_send_timeout 120s;
    }
    
    # Template Repository
    location /api/templates/ {
        proxy_pass http://template_repository/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Free AI Service
    location /api/free-ai/ {
        limit_req zone=ai burst=10 nodelay;
        proxy_pass http://free_ai_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 120s;
        proxy_read_timeout 300s;
        proxy_send_timeout 120s;
    }
    
    # AI Workers
    location /api/workers/ {
        limit_req zone=ai burst=10 nodelay;
        proxy_pass http://ai_workers/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 120s;
        proxy_read_timeout 300s;
        proxy_send_timeout 120s;
    }
    
    # Notification Service
    location /api/notifications/ {
        proxy_pass http://notification_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Submission Service
    location /api/submissions/ {
        proxy_pass http://submission_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # User Portal
    location /api/users/ {
        proxy_pass http://user_portal/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Content Service
    location /api/content/ {
        proxy_pass http://content_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Monitoring Service
    location /api/monitoring/ {
        proxy_pass http://monitoring_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Logging Service
    location /api/logs/ {
        proxy_pass http://logging_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Default route - return API documentation
    location / {
        return 200 '{"message":"StateX API Gateway","version":"1.0","endpoints":["/api/ai/","/api/notifications/","/api/submissions/","/api/users/","/api/content/","/api/monitoring/","/api/logs/","/health","/api/status"]}';
        add_header Content-Type application/json;
    }
}
