# Prototype Routes Configuration
# Handles /plan and /offer routes for AI-generated prototypes

# Development Plan route
server {
    listen 80;
    listen [::]:80;
    server_name ~^project-(?<prototype_id>[a-zA-Z0-9_-]+)\.localhost$;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CORS headers for prototype access
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    
    # Development Plan route
    location /plan {
        proxy_pass http://prototype-service:8003/api/prototype/$prototype_id/plan;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Prototype-ID $prototype_id;
        
        # Timeouts
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Service Offer route
    location /offer {
        proxy_pass http://prototype-service:8003/api/prototype/$prototype_id/offer;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Prototype-ID $prototype_id;
        
        # Timeouts
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
    }
}

# HTTPS version for production (when SSL is configured)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ~^project-(?<prototype_id>[a-zA-Z0-9_-]+)\.localhost$;
    
    # SSL Configuration (will be set up by Let's Encrypt)
    ssl_certificate /etc/nginx/certs/localhost.crt;
    ssl_certificate_key /etc/nginx/certs/localhost.key;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CORS headers for prototype access
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    
    # Development Plan route
    location /plan {
        proxy_pass http://prototype-service:8003/api/prototype/$prototype_id/plan;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Prototype-ID $prototype_id;
        
        # Timeouts
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Service Offer route
    location /offer {
        proxy_pass http://prototype-service:8003/api/prototype/$prototype_id/offer;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Prototype-ID $prototype_id;
        
        # Timeouts
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
    }
}
