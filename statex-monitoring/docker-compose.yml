services:
  # Prometheus - Metrics collection and storage
  prometheus:
    image: prom/prometheus:latest
    container_name: statex-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - statex_network

  # Grafana - Visualization and dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: statex-grafana
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=statex123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    restart: unless-stopped
    networks:
      - statex_network
    depends_on:
      - prometheus

  # Loki - Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: statex-loki
    ports:
      - "3102:3100"
    volumes:
      - ./loki/loki.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    user: "0:0"  # Run as root to fix permission issues
    networks:
      - statex_network

  # Nginx for Loki with proxy
  loki-nginx:
    image: nginx:alpine
    container_name: statex-loki-nginx
    ports:
      - "3100:80"
    volumes:
      - ./loki/index.html:/usr/share/nginx/html/index.html
      - ./loki/nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped
    networks:
      - statex_network
    depends_on:
      - loki

  # Jaeger - Distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: statex-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: unless-stopped
    networks:
      - statex_network

  # AlertManager - Alert routing and management
  alertmanager:
    image: prom/alertmanager:latest
    container_name: statex-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    restart: unless-stopped
    networks:
      - statex_network

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: statex-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - statex_network

  # cAdvisor - Container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: statex-cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    restart: unless-stopped
    networks:
      - statex_network

  # Blackbox Exporter - External service monitoring
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: statex-blackbox-exporter
    ports:
      - "9115:9115"
    volumes:
      - ./blackbox/blackbox.yml:/config/blackbox.yml
    command:
      - '--config.file=/config/blackbox.yml'
    restart: unless-stopped
    networks:
      - statex_network

  # StateX Monitoring Service - Custom monitoring for AI agents
  statex-monitoring-service:
    build: ./monitoring-service
    container_name: statex-monitoring-service
    ports:
      - "8007:8000"
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - GRAFANA_URL=http://grafana:3000
      - LOKI_URL=http://loki:3100
      - JAEGER_URL=http://jaeger:16686
      - AI_SERVICES_URL=http://host.docker.internal:8010
      - NOTIFICATION_SERVICE_URL=http://host.docker.internal:8005
      - PLATFORM_URL=http://host.docker.internal:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - statex_network
    depends_on:
      - prometheus
      - grafana
      - loki
      - jaeger

  # Logging Service - Centralized logging and audit trails
  logging-service:
    build: ./logging-service
    container_name: statex-monitoring-logging-service
    ports:
      - "8008:8000"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@postgres:5432/statex
      - REDIS_URL=redis://redis:6379/6
      - BROKER_URL=amqp://statex:statex_password@rabbitmq:5672
      - LOKI_URL=http://loki:3100
    depends_on:
      - loki
    restart: unless-stopped
    networks:
      - statex_network

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  alertmanager_data:

networks:
  statex_network:
    external: true
