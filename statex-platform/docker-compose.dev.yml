services:
  # API Gateway - Central routing for all services
  api-gateway:
    build:
      context: ../statex-infrastructure/nginx
      dockerfile: Dockerfile
    container_name: ${API_GATEWAY_CONTAINER_NAME:-statex_api_gateway_dev}
    restart: unless-stopped
    ports:
      - "${API_GATEWAY_EXTERNAL_PORT:-8001}:${API_GATEWAY_INTERNAL_PORT:-80}"
    volumes:
      - ../statex-infrastructure/nginx/ssl-dev:/etc/nginx/ssl:ro
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST:-localhost}
      - DEFAULT_HOST=${DEFAULT_HOST:-localhost}
      - AI_ORCHESTRATOR_HOST=${AI_ORCHESTRATOR_HOST:-ai-orchestrator}
      - AI_ORCHESTRATOR_PORT=${AI_ORCHESTRATOR_PORT:-8010}
      - NOTIFICATION_SERVICE_HOST=${NOTIFICATION_SERVICE_HOST:-notification-service}
      - NOTIFICATION_SERVICE_PORT=${NOTIFICATION_SERVICE_PORT:-8005}
      - SUBMISSION_SERVICE_HOST=${SUBMISSION_SERVICE_HOST:-submission-service}
      - SUBMISSION_SERVICE_PORT=${SUBMISSION_SERVICE_PORT:-8002}
      - USER_PORTAL_HOST=${USER_PORTAL_HOST:-user-portal}
      - USER_PORTAL_PORT=${USER_PORTAL_PORT:-8006}
      - CONTENT_SERVICE_HOST=${CONTENT_SERVICE_HOST:-content-service}
      - CONTENT_SERVICE_PORT=${CONTENT_SERVICE_PORT:-8009}
      - NLP_SERVICE_HOST=${NLP_SERVICE_HOST:-nlp-service}
      - NLP_SERVICE_PORT=${NLP_SERVICE_PORT:-8011}
      - ASR_SERVICE_HOST=${ASR_SERVICE_HOST:-asr-service}
      - ASR_SERVICE_PORT=${ASR_SERVICE_PORT:-8012}
      - DOCUMENT_AI_HOST=${DOCUMENT_AI_HOST:-document-ai}
      - DOCUMENT_AI_PORT=${DOCUMENT_AI_PORT:-8013}
      - PROTOTYPE_GENERATOR_HOST=${PROTOTYPE_GENERATOR_HOST:-prototype-generator}
      - PROTOTYPE_GENERATOR_PORT=${PROTOTYPE_GENERATOR_PORT:-8014}
      - TEMPLATE_REPOSITORY_HOST=${TEMPLATE_REPOSITORY_HOST:-template-repository}
      - TEMPLATE_REPOSITORY_PORT=${TEMPLATE_REPOSITORY_PORT:-8015}
      - FREE_AI_SERVICE_HOST=${FREE_AI_SERVICE_HOST:-free-ai-service}
      - FREE_AI_SERVICE_PORT=${FREE_AI_SERVICE_PORT:-8016}
      - AI_WORKERS_HOST=${AI_WORKERS_HOST:-ai-workers}
      - AI_WORKERS_PORT=${AI_WORKERS_PORT:-8017}
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 20s
      timeout: 10s
      retries: 2
      start_period: 10s

  # Platform Management Service - Central orchestration hub
  platform-management:
    image: python:3.11-slim
    container_name: ${PLATFORM_MANAGEMENT_CONTAINER_NAME:-statex_platform_management_dev}
    volumes:
      - ./services/platform-management:/app
      - ~/.cache/pip:/root/.cache/pip
    working_dir: /app
    command: sh -c "pip install -r requirements.txt && uvicorn main:app --reload --host 0.0.0.0 --port ${PLATFORM_MANAGEMENT_INTERNAL_PORT:-8000}"
    ports:
      - "${PLATFORM_MANAGEMENT_EXTERNAL_PORT:-8000}:${PLATFORM_MANAGEMENT_INTERNAL_PORT:-8000}"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@host.docker.internal:5432/statex
      - REDIS_URL=redis://host.docker.internal:6379
      - RABBITMQ_URL=amqp://statex:statex_password@host.docker.internal:5672
      
      # Service URLs
      - AI_ORCHESTRATOR_URL=${AI_ORCHESTRATOR_URL:-http://ai-orchestrator:8000}
      - NOTIFICATION_SERVICE_URL=http://notification-service:8005
      - SUBMISSION_SERVICE_URL=http://submission-service:8002
      - USER_PORTAL_URL=http://user-portal:8006
      - CONTENT_SERVICE_URL=http://content-service:8009
      - MONITORING_SERVICE_URL=http://monitoring-service:8007
      - LOGGING_SERVICE_URL=http://logging-service:8008
      
      # Development Settings
      - DEBUG=true
      - LOG_LEVEL=debug
      - ENVIRONMENT=development
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:${PLATFORM_MANAGEMENT_INTERNAL_PORT:-8000}/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  statex_network:
    external: true
