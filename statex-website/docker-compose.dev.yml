services:
  # Submission Service - FastAPI with hot reload
  submission-service:
    image: python:3.11-slim
    container_name: ${SUBMISSION_SERVICE_CONTAINER_NAME:-statex_submission_dev}
    volumes:
      - ./services/submission-service:/app
      - ./shared:/app/shared
      # Fallback dev data directory inside repo
      - ./services/submission-service/data:/app/data
      - ./services/submission-service/storage:/app/storage
      - ~/.cache/pip:/root/.cache/pip  # Cache pip packages
    working_dir: /app
    command: sh -c "apt-get update && apt-get install -y curl && pip install -r requirements.txt && python -c 'import storage.disk_storage' && uvicorn main:app --reload --host 0.0.0.0 --port ${SUBMISSION_SERVICE_INTERNAL_PORT:-8000}"
    ports:
      - "${SUBMISSION_SERVICE_EXTERNAL_PORT:-8002}:${SUBMISSION_SERVICE_INTERNAL_PORT:-8000}"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@host.docker.internal:5432/statex
      - REDIS_URL=redis://host.docker.internal:6379
      - RABBITMQ_URL=amqp://statex:statex_password@host.docker.internal:5672
      - S3_ENDPOINT=http://host.docker.internal:9000
      - S3_ACCESS_KEY=statex
      - S3_SECRET_KEY=statex_password
      - AI_ORCHESTRATOR_URL=${AI_ORCHESTRATOR_URL:-http://ai-orchestrator:8000}
      - NOTIFICATION_SERVICE_URL=${NOTIFICATION_SERVICE_URL:-http://notification-service:8005}
      - AI_SERVICES_BASE_URL=${AI_SERVICES_BASE_URL:-http://ai-orchestrator:8000}
      # Write uploads inside repo by default
      - SUBMISSION_UPLOAD_DIR=/app/data/uploads
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SUBMISSION_SERVICE_INTERNAL_PORT:-8000}/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

  # User Portal Service
  user-portal:
    image: python:3.11-slim
    container_name: ${USER_PORTAL_CONTAINER_NAME:-statex_user_portal_dev}
    volumes:
      - ./user-portal:/app
      - ./shared:/app/shared
      - ~/.cache/pip:/root/.cache/pip
    working_dir: /app
    command: sh -c "apt-get update && apt-get install -y curl && pip install -r requirements.txt && uvicorn app.main:app --reload --host 0.0.0.0 --port ${USER_PORTAL_INTERNAL_PORT:-8000}"
    ports:
      - "${USER_PORTAL_EXTERNAL_PORT:-8006}:${USER_PORTAL_INTERNAL_PORT:-8000}"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@host.docker.internal:5432/statex
      - REDIS_URL=redis://host.docker.internal:6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here}
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SUBMISSION_SERVICE_INTERNAL_PORT:-8000}/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Content Service
  content-service:
    image: python:3.11-slim
    container_name: ${CONTENT_SERVICE_CONTAINER_NAME:-statex_content_dev}
    volumes:
      - ./content-service:/app
      - ./shared:/app/shared
      - ~/.cache/pip:/root/.cache/pip
    working_dir: /app
    command: sh -c "apt-get update && apt-get install -y curl && pip install -r requirements.txt && uvicorn app.main:app --reload --host 0.0.0.0 --port ${CONTENT_SERVICE_INTERNAL_PORT:-8000}"
    ports:
      - "${CONTENT_SERVICE_EXTERNAL_PORT:-8009}:${CONTENT_SERVICE_INTERNAL_PORT:-8000}"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@host.docker.internal:5432/statex
      - REDIS_URL=redis://host.docker.internal:6379
      - ELASTICSEARCH_URL=http://host.docker.internal:9200
      - S3_ENDPOINT=http://host.docker.internal:9000
      - S3_ACCESS_KEY=statex
      - S3_SECRET_KEY=statex_password
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SUBMISSION_SERVICE_INTERNAL_PORT:-8000}/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  statex_network:
    external: true

