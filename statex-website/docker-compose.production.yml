services:
  # Frontend Application (Pre-built Node.js image)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        BUILD_DATE: ${BUILD_DATE:-${DEFAULT_BUILD_DATE}}
        PACKAGE_VERSION: ${PACKAGE_VERSION:-${DEFAULT_PACKAGE_VERSION}}
        USER_UID: ${USER_UID:-${DEFAULT_USER_UID}}
    container_name: ${VIRTUAL_HOST}
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-${DEFAULT_FRONTEND_PORT}}:3000"
    env_file:
      - ./config/defaults.env
    environment:
      NODE_ENV: ${NODE_ENV}
      NEXT_PUBLIC_BASE_URL: ${BASE_URL}
      NEXT_PUBLIC_API_URL: ${API_URL}
      DEBUG: ${DEBUG}
    command: ["npm", "start"]
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${FRONTEND_PORT:-${DEFAULT_FRONTEND_PORT}}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (if keeping separate from platform)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      args:
        USER_UID: ${USER_UID:-${DEFAULT_USER_UID}}
    container_name: api.${VIRTUAL_HOST}
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-${DEFAULT_BACKEND_PORT}}:4000"
    volumes:
      # Mount uploads directory to host filesystem for external storage
      - ${UPLOAD_DIR:-${DEFAULT_UPLOAD_DIR}}:/app/uploads
    env_file:
      - ./config/defaults.env
    environment:
      NODE_ENV: ${NODE_ENV}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      DEBUG: ${DEBUG}
      BASE_URL: ${BASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      JWT_COOKIE_EXPIRES_IN: ${JWT_COOKIE_EXPIRES_IN}
      REFRESH_TOKEN_EXPIRES_IN: ${REFRESH_TOKEN_EXPIRES_IN}
      COOKIE_SECRET: ${COOKIE_SECRET}
      NOTIFICATION_SERVICE_URL: ${NOTIFICATION_SERVICE_URL:-${DEFAULT_NOTIFICATION_SERVICE_URL}}
      NOTIFICATION_SERVICE_API_KEY: ${NOTIFICATION_SERVICE_API_KEY:-${DEFAULT_NOTIFICATION_SERVICE_API_KEY}}
      NOTIFICATION_SERVICE_TIMEOUT: ${NOTIFICATION_SERVICE_TIMEOUT:-${DEFAULT_NOTIFICATION_SERVICE_TIMEOUT}}
      NOTIFICATION_SERVICE_RETRIES: ${NOTIFICATION_SERVICE_RETRIES:-${DEFAULT_NOTIFICATION_SERVICE_RETRIES}}
      NOTIFICATION_SERVICE_ENABLED: ${NOTIFICATION_SERVICE_ENABLED:-${DEFAULT_NOTIFICATION_SERVICE_ENABLED}}
      NOTIFICATION_SERVICE_HEALTH_ENDPOINT: ${NOTIFICATION_SERVICE_HEALTH_ENDPOINT:-${DEFAULT_NOTIFICATION_SERVICE_HEALTH_ENDPOINT}}
      NOTIFICATION_SERVICE_NOTIFY_ENDPOINT: ${NOTIFICATION_SERVICE_NOTIFY_ENDPOINT:-${DEFAULT_NOTIFICATION_SERVICE_NOTIFY_ENDPOINT}}
      NOTIFICATION_SERVICE_VERSION_ENDPOINT: ${NOTIFICATION_SERVICE_VERSION_ENDPOINT:-${DEFAULT_NOTIFICATION_SERVICE_VERSION_ENDPOINT}}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX}
      CORS_ORIGIN: ${CORS_ORIGIN}
      CORS_METHODS: ${CORS_METHODS}
      CORS_CREDENTIALS: ${CORS_CREDENTIALS}
      CORS_MAX_AGE: ${CORS_MAX_AGE}
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_FORMAT: ${LOG_FORMAT}
      LOG_FILE: ${LOG_FILE}
      UPLOAD_DIR: /app/uploads
      MAX_FILE_SIZE: ${MAX_FILE_SIZE}
      MAX_FILES: ${MAX_FILES}
      SESSION_SECRET: ${SESSION_SECRET}
      SESSION_COOKIE_MAX_AGE: ${SESSION_COOKIE_MAX_AGE}
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  statex_network:
    external: true