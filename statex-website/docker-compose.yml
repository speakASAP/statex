services:
  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.fast
      args:
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - PACKAGE_VERSION=${PACKAGE_VERSION:-1.0.0}
        - USER_UID=${USER_UID:-1000}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
      - NEXT_PUBLIC_NOTIFICATION_SERVICE_URL=${NEXT_PUBLIC_NOTIFICATION_SERVICE_URL}
      - NEXT_PUBLIC_USER_PORTAL_URL=${NEXT_PUBLIC_USER_PORTAL_URL}
      - NEXT_PUBLIC_AI_SERVICE_URL=${NEXT_PUBLIC_AI_SERVICE_URL}
      - NEXT_PUBLIC_NOTIFICATION_SERVICE_API_KEY=${NEXT_PUBLIC_NOTIFICATION_SERVICE_API_KEY}
    volumes:
      - ./logs:/app/logs
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${FRONTEND_PORT:-3000}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Submission Service
  submission-service:
    build:
      context: .
      dockerfile: ./services/submission-service/Dockerfile
    container_name: ${SUBMISSION_SERVICE_CONTAINER_NAME:-statex_submission_service}
    ports:
      - "${SUBMISSION_SERVICE_EXTERNAL_PORT:-8002}:${SUBMISSION_SERVICE_INTERNAL_PORT:-8000}"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@postgres:5432/statex
      - REDIS_URL=redis://redis:6379/1
      - BROKER_URL=amqp://statex:statex_password@rabbitmq:5672
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=statex
      - S3_SECRET_KEY=statex_password
      - AI_SERVICES_BASE_URL=http://statex-ai-ai-orchestrator-1:8000
      - NOTIFICATION_SERVICE_URL=http://statex-notification-service-notification-service-1:8005
      - WEBSITE_SERVICES_URL=http://statex-website-content-service-1:8000
      - MONITORING_SERVICE_URL=http://statex-monitoring-service:8000
    # depends_on: Infrastructure services are managed by statex-infrastructure
    # and should be started first via manage.sh
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 40s

  # User Portal Service
  user-portal:
    build: ./user-portal
    container_name: ${USER_PORTAL_CONTAINER_NAME:-statex_user_portal_service}
    ports:
      - "${USER_PORTAL_EXTERNAL_PORT:-8006}:${USER_PORTAL_INTERNAL_PORT:-8000}"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@postgres:5432/statex
      - REDIS_URL=redis://redis:6379/0
      - BROKER_URL=amqp://statex:statex_password@rabbitmq:5672
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 40s

  # Content Service
  content-service:
    build: ./services/content-service
    container_name: ${CONTENT_SERVICE_CONTAINER_NAME:-statex_content_service}
    ports:
      - "${CONTENT_SERVICE_EXTERNAL_PORT:-8009}:${CONTENT_SERVICE_INTERNAL_PORT:-8000}"
    environment:
      - DATABASE_URL=postgresql://statex:statex_password@postgres:5432/statex
      - REDIS_URL=redis://redis:6379/5
      - BROKER_URL=amqp://statex:statex_password@rabbitmq:5672
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=statex
      - S3_SECRET_KEY=statex_password
    # depends_on: Infrastructure services are managed by statex-infrastructure
    # and should be started first via manage.sh
    networks:
      - statex_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 40s

  # Infrastructure services are managed by statex-infrastructure

volumes: {}

networks:
  statex_network:
    external: true
